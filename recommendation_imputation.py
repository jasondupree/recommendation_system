# -*- coding: utf-8 -*-
"""recommendation_imputation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h2B6OupxHrcabsk6_sIntqiRofuvmQsZ

# **Sales Data Imputation System**

# **Milestone 1**

# **Recommendation System Imputation: Sales Data Example**

--------------
## **Context**
--------------

Data integity issues in Point-of-Sale (POS) data continues to be an issue for large companies, providing opportunity for advanced imputation methods like leveraging recommendation systems.

----------------
## **Objective**
----------------

Build a recommendation system to recommend (impute) sales for customers entirely or partially without POS data.

-----------------------------
## **Dataset** 
-----------------------------

The generic sales_data dataset contains the following attributes:

- **Order Number:** Every order identified with a unique order-line id
- **Order Line Number:** Every order identified with a unique order-line id
- **Price Per Unit:** The rating of the corresponding product by the corresponding user
- **Order Date:** Time of the rating. We **will not use this column** to solve the current problem
- **Status:** Order status of the product.

### **Importing Libraries and the Dataset**
"""

#Mounting the drive
from google.colab import drive
drive.mount('/content/drive')

import warnings
warnings.filterwarnings('ignore')

import numpy as np 
import pandas as pd

import matplotlib.pyplot as plt
import seaborn as sns 

from sklearn.metrics.pairwise import cosine_similarity 
from collections import defaultdict

from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import LabelEncoder

#importing the datasets
pos_df = pd.read_csv('/content/drive/MyDrive/Colab_Notebooks/sales_data.csv', encoding= 'unicode_escape')
bookings_df = pd.read_csv('/content/drive/MyDrive/Colab_Notebooks/bookings_data.csv')

"""### **Reviewing the Data**"""

# See top 10 records of pos_df data
pos_df.head(10)

# See top 10 records of bookings_df data
bookings_df.head(10)

"""### **Info Types + Description**"""

# See the info of the bookings_df data
pos_df.info()
pos_df.describe().T

# See the info of the pos_df data
pos_df.info()
pos_df.describe().T
# print(pos_df.nunique())

# Left merge the bookings_df and pos_df data on 'PRODUCTCODE' and 'CUSTOMERNAME'.
df = pd.merge(bookings_df, pos_df, how='left', on=['PRODUCTCODE', 'CUSTOMERNAME'])

df.head()